import React, { useState } from 'react';

import '@google/model-viewer';

import styles from './ARScene.module.css';

import ar1And from './../../images/ar-models/AR1.glb';
import ar1IOs from './../../images/ar-models/AR1.usdz';
import ar2And from './../../images/ar-models/AR2.glb';
import ar2IOs from './../../images/ar-models/AR2.usdz';
import ar3And from './../../images/ar-models/AR3.glb';
import ar3IOs from './../../images/ar-models/AR3.usdz';
import ar4And from './../../images/ar-models/AR3.glb';
import ar4IOs from './../../images/ar-models/AR3.usdz';

const ARScene = () => {
  const [answers, setAnswers] = useState({ q1: 0, q2: 0, q3: 0, q4: 0}); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–Ω–µ –≤—ã–±—Ä–∞–Ω—ã)
  const [showAR, setShowAR] = useState(false); // –£–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º AR —Å—Ü–µ–Ω—ã
  const [arModel, setArModel] = useState({ android: ar4And, ios: ar4IOs }); // –ú–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è AR –º–æ–¥–µ–ª–∏
  const handleAnswerChange = (question, answer) => {
    const updatedAnswers = { ...answers, [question]: answer };
    setAnswers(updatedAnswers);
  };

  // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è AR –º–æ–¥–µ–ª–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤
  const calculateARModel = () => {
    const { q1, q2, q3, q4 } = answers;
    let selectedModel = { android: ar1And, ios: ar1IOs }; // –ú–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
    const combination = `${q1}${q2}${q3}${q4}`;

    switch (combination) {
      case '1111':
        selectedModel = { android: ar1And, ios: ar1IOs };
        break;
      case '2222':
        selectedModel = { android: ar2And, ios: ar2IOs };
        break;
      case '3333':
        selectedModel = { android: ar3And, ios: ar3IOs };
        break;
      default:
        selectedModel = { android: ar4And, ios: ar4IOs };
    }

    setArModel(selectedModel);
    setShowAR(true); // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ AR —Å—Ü–µ–Ω—ã –ø–æ—Å–ª–µ —Ä–∞—Å—á–µ—Ç–∞
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤—ã–±—Ä–∞–Ω—ã –ª–∏ –≤—Å–µ –æ—Ç–≤–µ—Ç—ã (–≤–∫–ª—é—á–∞–µ—Ç q4)
  const allQuestionsAnswered = Object.values(answers).every(answer => answer !== 0);


  return (
    <div>
      <div className={styles.quizContainer}>
        <h2>–°—Ç–∞–Ω—Ü–∏—è 1</h2>
        <div className={styles.question}>
          <label>
            <input type="radio" name="q1" value={1} checked={answers.q1 === 1} onChange={() => handleAnswerChange('q1', 1)} placeholder='1' />
          </label>
          <label>
            <input type="radio" name="q1" value={2} checked={answers.q1 === 2} onChange={() => handleAnswerChange('q1', 2)} />
            2
          </label>
          <label>
            <input type="radio" name="q1" value={3} checked={answers.q1 === 3} onChange={() => handleAnswerChange('q1', 3)} />
            3
          </label>
        </div>

        <h2>–°—Ç–∞–Ω—Ü–∏—è 2</h2>
        <div className={styles.question}>
          <label>
            <input type="radio" name="q2" value={1} checked={answers.q2 === 1} onChange={() => handleAnswerChange('q2', 1)} />
            1
          </label>
          <label>
            <input type="radio" name="q2" value={2} checked={answers.q2 === 2} onChange={() => handleAnswerChange('q2', 2)} />
            2
          </label>
          <label>
            <input type="radio" name="q2" value={3} checked={answers.q2 === 3} onChange={() => handleAnswerChange('q2', 3)} />
            3
          </label>
        </div>

        <h2>–°—Ç–∞–Ω—Ü–∏—è 3</h2>
        <div className={styles.question}>
          <label>
            <input type="radio" name="q3" value={1} checked={answers.q3 === 1} onChange={() => handleAnswerChange('q3', 1)} />
            1
          </label>
          <label>
            <input type="radio" name="q3" value={2} checked={answers.q3 === 2} onChange={() => handleAnswerChange('q3', 2)} />
            2
          </label>
          <label>
            <input type="radio" name="q3" value={3} checked={answers.q3 === 3} onChange={() => handleAnswerChange('q3', 3)} />
            3
          </label>
        </div>

        <h2>–°—Ç–∞–Ω—Ü–∏—è 4</h2>
        <div className={styles.question}>
          <label>
            <input type="radio" name="q4" value={1} checked={answers.q4 === 1} onChange={() => handleAnswerChange('q4', 1)} />
            1
          </label>
          <label>
            <input type="radio" name="q4" value={2} checked={answers.q4 === 2} onChange={() => handleAnswerChange('q4', 2)} />
            2
          </label>
          <label>
            <input type="radio" name="q4" value={3} checked={answers.q4 === 3} onChange={() => handleAnswerChange('q4', 3)} />
            3
          </label>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å", –∫–æ—Ç–æ—Ä–∞—è –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –±—É–¥—É—Ç –æ—Ç–≤–µ—á–µ–Ω—ã */}
        <button
          className={styles.calculateButton}
          onClick={calculateARModel}
          disabled={!allQuestionsAnswered} // –û—Ç–∫–ª—é—á–µ–Ω–∞, –µ—Å–ª–∏ –Ω–µ –≤—Å–µ –æ—Ç–≤–µ—Ç—ã –¥–∞–Ω—ã
        >
          –†–∞—Å—Å—á–∏—Ç–∞—Ç—å
        </button>
      </div>

      {/* –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ AR —Å—Ü–µ–Ω—ã –ø–æ—Å–ª–µ —Ä–∞—Å—á–µ—Ç–∞ */}
      {showAR && (
        <div className={styles.ARScene} style={{ opacity: showAR ? 1 : 0, transition: 'opacity 1s' }}>
          <model-viewer
            className={styles.modelImg}
            src={arModel.android} // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –Ω–∞ Android
            ios-src={arModel.ios} // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –Ω–∞ iOS
            alt="A 3D model"
            ar
            ar-modes="scene-viewer quick-look webxr"
            camera-controls
            touch-action="pan-y"
            max-camera-orbit="auto auto auto"
            style={{ width: '80%', height: '80%', margin: '0 auto', paddingTop: '10%' }}
          >
            <button slot="ar-button" className={styles.arButton}>
              üëã Activate AR
            </button>
          </model-viewer>
        </div>
      )}
    </div>
  );
};

export default ARScene;
